<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">

    <!-- Expandar -->
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="30"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=Header}"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=ActualWidth}"
                                FlowDirection="LeftToRight">
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox -->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid x:Name="EnableTrue" Width="17" Height="14">
                                    <Rectangle x:Name="CheckNull" Width="12" Height="12" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="LightGray" Stroke="Gray" StrokeThickness="1"/>
                                    <Rectangle x:Name="CheckRect" Width="12" Height="12" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="White" Stroke="LightGray" StrokeThickness="1"/>
                                    <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stroke="SteelBlue"/>
                                </Grid>
                                <Grid x:Name="EnableFalse" Width="17">
                                    <Rectangle Width="12" Height="12" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="WhiteSmoke" Stroke="Gray" StrokeThickness="1" StrokeDashArray="1,3"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter/>
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Visible" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnableTrue" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EnableFalse" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckNull" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckRect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid -->
    <Style x:Key="dataGridViewStyle" TargetType="DataGrid">
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="RowHeight" Value="40"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#FFD6EFF7"/>
        <Setter Property="VerticalGridLinesBrush"   Value="#FFE4E4BD"/>
        <Setter Property="AlternatingRowBackground" Value="#FFD6EFF7"/>
        <Setter Property="BorderBrush" Value="#FFD7E4F2"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FF3399FF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ProgresBar -->
    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ProgressBar 
                        HorizontalContentAlignment="Center" 
                        VerticalContentAlignment="Center"
                        Value="{TemplateBinding Value}">
                    </ProgressBar>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" Margin="2.5"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- GuideBar -->
    <Style x:Key="GuideBarStyle" TargetType="Label">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Name="border" BorderThickness="0" BorderBrush="#707070" 
                            Background="Black"
                            CornerRadius="0" Margin="0">
                        <StackPanel>
                            <Label 
                               Content="{TemplateBinding Content}" 
                               Foreground="{TemplateBinding Foreground}">
                            </Label>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="AccessButtonCloseStyle" TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource AccessButtonForegroundBrushOFF}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="HoverButtonBorder" BorderThickness="2" CornerRadius="5"
                                Margin="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" 
                                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <TextBlock.Background>
                                <ImageBrush Stretch="Uniform" TileMode="None" 
                                    ImageSource="/Images/power.png"/>
                            </TextBlock.Background>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- マウスオーバー -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverButtonBorder" 
                                        Property="BorderBrush" 
                                        Value="{StaticResource AccessButtonBorderBrushHover}" />
                            <Setter TargetName="HoverButtonBorder" 
                                        Property="Background" 
                                        Value="{StaticResource AccessButtonBackgroundBrushHover}" />
                            <Setter Property="Foreground" 
                                        Value="{StaticResource AccessButtonForegroundBrushHover}"/>
                        </Trigger>
                        <!--ボタンを押した時に、背景色を透過-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverButtonBorder" 
                                        Property="Background" 
                                        Value="{StaticResource AccessButtonBackgroundBrushON}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- プログレスリング -->
    <Style x:Key="pgr-normal" TargetType="{x:Type Mah:ProgressRing}" >
        <Setter Property="Foreground" Value="#33adff" />
        <Setter Property="IsActive" Value="False" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Panel.ZIndex" Value="100" />
    </Style>
    <!-- プログレスオーバーレイ-->
    <Style x:Key="rec-overlay" TargetType="{x:Type Rectangle}" >
        <Setter Property="Fill" Value="#000000" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Panel.ZIndex" Value="1000" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <!-- ブラシリソース -->
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="#FF272424"/>

    <SolidColorBrush x:Key="StartButtonBackgroundBrushOFF" Color="#FF272424"/>
    <SolidColorBrush x:Key="StartButtonBackgroundBrushHover" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="StartButtonBackgroundBrushON" Color="SteelBlue"/>
    <SolidColorBrush x:Key="StartButtonForegroundBrushOFF" Color="White"/>
    <SolidColorBrush x:Key="StartButtonForegroundBrushHover" Color="White"/>
    <SolidColorBrush x:Key="StartButtonForegroundBrushON" Color="White"/>
    <SolidColorBrush x:Key="StartButtonBorderBrushOFF" Color="#FF272424"/>
    <SolidColorBrush x:Key="StartButtonBorderBrushHover" Color="LawnGreen"/>
    <SolidColorBrush x:Key="StartButtonBorderBrushON" Color="WhiteSmoke"/>

    <SolidColorBrush x:Key="MenuButtonBackgroundBrushOFF" Color="#FF272424"/>
    <SolidColorBrush x:Key="MenuButtonBackgroundBrushHover" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="MenuButtonBackgroundBrushON" Color="SteelBlue"/>
    <SolidColorBrush x:Key="MenuButtonForegroundBrushOFF" Color="White"/>
    <SolidColorBrush x:Key="MenuButtonForegroundBrushHover" Color="White"/>
    <SolidColorBrush x:Key="MenuButtonForegroundBrushON" Color="White"/>
    <SolidColorBrush x:Key="MenuButtonBorderBrushOFF" Color="#FF272424"/>
    <SolidColorBrush x:Key="MenuButtonBorderBrushHover" Color="LawnGreen"/>
    <SolidColorBrush x:Key="MenuButtonBorderBrushON" Color="WhiteSmoke"/>

    <SolidColorBrush x:Key="IndexButtonBackgroundBrushOFF" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="IndexButtonBackgroundBrushHover" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="IndexButtonBackgroundBrushON" Color="DeepSkyBlue"/>
    <SolidColorBrush x:Key="IndexButtonForegroundBrushOFF" Color="Black"/>
    <SolidColorBrush x:Key="IndexButtonForegroundBrushHover" Color="Black"/>
    <SolidColorBrush x:Key="IndexButtonForegroundBrushON" Color="Black"/>
    <SolidColorBrush x:Key="IndexButtonBorderBrushOFF" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="IndexButtonBorderBrushHover" Color="LawnGreen"/>
    <SolidColorBrush x:Key="IndexButtonBorderBrushON" Color="WhiteSmoke"/>

    <SolidColorBrush x:Key="SelectButtonBackgroundBrushOFF" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="SelectButtonBackgroundBrushHover" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="SelectButtonBackgroundBrushON" Color="DeepSkyBlue"/>
    <SolidColorBrush x:Key="SelectButtonForegroundBrushOFF" Color="Black"/>
    <SolidColorBrush x:Key="SelectButtonForegroundBrushHover" Color="Black"/>
    <SolidColorBrush x:Key="SelectButtonForegroundBrushON" Color="Black"/>
    <SolidColorBrush x:Key="SelectButtonBorderBrushOFF" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="SelectButtonBorderBrushHover" Color="LawnGreen"/>
    <SolidColorBrush x:Key="SelectButtonBorderBrushON" Color="WhiteSmoke"/>

    <SolidColorBrush x:Key="AccessButtonBackgroundBrushOFF" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="AccessButtonBackgroundBrushHover" Color="LightSlateGray"/>
    <SolidColorBrush x:Key="AccessButtonBackgroundBrushON" Color="Aquamarine"/>
    <SolidColorBrush x:Key="AccessButtonForegroundBrushOFF" Color="Black"/>
    <SolidColorBrush x:Key="AccessButtonForegroundBrushHover" Color="Black"/>
    <SolidColorBrush x:Key="AccessButtonForegroundBrushON" Color="Black"/>
    <SolidColorBrush x:Key="AccessButtonBorderBrushOFF" Color="Black"/>
    <SolidColorBrush x:Key="AccessButtonBorderBrushHover" Color="LawnGreen"/>
    <SolidColorBrush x:Key="AccessButtonBorderBrushON" Color="Black"/>

    <SolidColorBrush x:Key="CommandButtonBackgroundBrushOFF" Color="#FF061A0F"/>
    <SolidColorBrush x:Key="CommandButtonBackgroundBrushHover" Color="#FF061A0F"/>
    <SolidColorBrush x:Key="CommandButtonBackgroundBrushON" Color="Aquamarine"/>
    <SolidColorBrush x:Key="CommandButtonForegroundBrushOFF" Color="White"/>
    <SolidColorBrush x:Key="CommandButtonForegroundBrushHover" Color="White"/>
    <SolidColorBrush x:Key="CommandButtonForegroundBrushON" Color="White"/>
    <SolidColorBrush x:Key="CommandButtonBorderBrushOFF" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="CommandButtonBorderBrushHover" Color="LawnGreen"/>
    <SolidColorBrush x:Key="CommandButtonBorderBrushON" Color="WhiteSmoke"/>

    <SolidColorBrush x:Key="LampBackgroundBrushOFF" Color="DarkGray"/>
    <SolidColorBrush x:Key="LampBackgroundBrushON" Color="Aquamarine"/>
    <SolidColorBrush x:Key="LampBackgroundBrushErr" Color="Tomato"/>

    <SolidColorBrush x:Key="GuideForegroundBrushNormal" Color="White"/>
    <SolidColorBrush x:Key="GuideForegroundBrushErr" Color="Tomato"/>
    <SolidColorBrush x:Key="GuideForegroundBrushDebug" Color="LawnGreen"/>
    <SolidColorBrush x:Key="GuideForegroundBrushRun" Color="DeepSkyBlue"/>



</ResourceDictionary>